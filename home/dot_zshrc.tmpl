source $HOME/.zplug/init.zsh
source $HOME/.asdf/asdf.sh
source <($HOME/bin/afx init)
source "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc"

{{ if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "arm64") }}
path=(/opt/homebrew/bin $path[@])

# To make sure that we can run pgcli.
path=(/opt/homebrew/opt/libpq/bin $path[@])
{{ end }}

path=(/usr/sbin $path[@])
path=(/usr/local/bin $path[@])
path=(/usr/local/go/bin $path[@])
path=($HOME/go/bin $path[@])
path=($HOME/bin $path[@])
path=($HOME/bin/lua/bin $path[@])
path=($HOME/.poetry/bin $path[@])
path=($HOME/.local/bin $path[@])
{{- if eq .chezmoi.os "darwin" }}
path=($(brew --prefix gnu-tar)/libexec/gnubin $path[@])
path=($(brew --prefix coreutils)/libexec/gnubin $path[@])
path=(/etc/profiles/per-user/${USER}/bin $path[@])
path=(/run/current-system/sw/bin $path[@])
{{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
{{- end }}
path=($HOME/.local/share/nvim/mason/bin $path[@])
path=($HOME/dotfiles/node/node_modules/.bin $path[@])
{{- if eq .chezmoi.os "darwin" }}
path=(/Library/TeX/texbin $path[@])
{{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
path=(/usr/local/texlive/2022/bin/x86_64-linux $path[@])
{{- end }}

manpath=(/usr/local/texlive/2022/texmf-dist/doc/man $manpath[@])
infopath=(/usr/local/texlive/2022/texmf-dist/doc/info $infopath[@])

{{- if eq .chezmoi.os "darwin" }}
# See https://rycee.gitlab.io/home-manager/index.html#sec-install-nix-darwin-module
. "/etc/profiles/per-user/$USER/etc/profile.d/hm-session-vars.sh"
{{- end }}

fpath=(${ASDF_DIR}/completions $fpath)
fpath+=("$HOME/.local/share/zsh/site-functions")

eval "$(starship init zsh)"

export EDITOR="nvim"
export VISUAL="nvim"
export CLICOLOR=1
export TERM="xterm-256color"
export PAGER="less"
export DELTA_PAGER='less -S'
export LESS='-XRMsIg'
export LANG=C
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export RIPGREP_CONFIG_PATH="${HOME}/.ripgreprc"
export GPG_TTY=$(tty)
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
export NAVI_CONFIG="${HOME}/.config/navi/config.yaml"
export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive # https://nixos.wiki/wiki/Locales

alias ls="exa"
alias lz="lazygit"
alias open='open_command'
alias tmux='direnv exec / env TERM=xterm-256color tmux' # https://github.com/direnv/direnv/wiki/Tmux
alias vi="nvim"
alias vim="nvim"
alias vimdiff="nvim -d"

zplug 'zplug/zplug', hook-build:'zplug --self-manage'

zplug "Aloxaf/fzf-tab", defer:2
zplug "b4b4r07/enhancd"
zplug "jeffreytse/zsh-vi-mode"
zplug "lib/functions", from:oh-my-zsh
zplug "lib/history", from:oh-my-zsh
zplug "mollifier/cd-gitroot"
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/colored-man-pages", from:oh-my-zsh
zplug "wfxr/forgit", defer:2 # Using defer:2 so that glo works for forgit instead of plugins/git
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting", defer:3
zplug "trapd00r/LS_COLORS", use:lscolors.sh
zplug "marlonrichert/zsh-hist"

zplug "~/.zsh", from:local

eval "$(direnv hook zsh)"

# https://github.com/jeffreytse/zsh-vi-mode#execute-extra-commands
function zvm_after_init() {
  source $HOME/.fzf.zsh
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down
  bindkey "^b" select_git_checkout
  bindkey '^]' fzf-src

  # Install navi shell widget. <C-g> will launch navi.
  # We have to place this inside zvm_after_init to make <C-g> works.
  eval "$(navi widget zsh)" 

  source <(kubectl completion zsh)
  source <(kustomize completion zsh)
  source <(helm completion zsh)
}

# Setting for zsh-hist formatting
# See https://github.com/marlonrichert/zsh-hist#uniform-code-formatting
unsetopt HIST_REDUCE_BLANKS

# enhancd
export ENHANCD_DOT_ARG="..."
export ENHANCD_COMPLETION_BEHAVIOR="list" # When cd <tab>, it shows list of directory for auto-complete.

# forgit
# See: https://github.com/wfxr/forgit/issues/71#issuecomment-627997261
export FORGIT_LOG_FZF_OPTS="--reverse"
export FORGIT_REBASE_FZF_OPTS="--reverse"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

gpgconf --launch gpg-agent

# Then, source plugins and add commands to $PATH
zplug load

test -d "$HOME/.tea" && source <("$HOME/.tea/tea.xyz/v*/bin/tea" --magic=zsh --silent)
