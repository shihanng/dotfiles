path=(/usr/local/go/bin $path[@])
path=($HOME/bin $path[@])
{{ if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "arm64") }}
# Homebrew path for Apple Silicon
path=(/opt/homebrew/bin $path[@])
# To make sure that we can run pgcli.
path=(/opt/homebrew/opt/libpq/bin $path[@])
{{ end }}
path=(/usr/sbin $path[@])
path=(/usr/local/bin $path[@])
path=(/usr/local/go/bin $path[@])
path=($HOME/go/bin $path[@])
path=($HOME/bin $path[@])
path=($HOME/bin/lua/bin $path[@])
path=($HOME/.poetry/bin $path[@])
path=($HOME/.local/bin $path[@])
{{- if eq .chezmoi.os "darwin" }}
path=($(brew --prefix gnu-tar)/libexec/gnubin $path[@])
path=($(brew --prefix coreutils)/libexec/gnubin $path[@])
{{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
{{- end }}
path=($HOME/.local/share/nvim/mason/bin $path[@])
path=($HOME/dotfiles/go/bin $path[@])
{{- if eq .chezmoi.os "darwin" }}
path=(/Library/TeX/texbin $path[@])
{{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
path=(/usr/local/texlive/2022/bin/x86_64-linux $path[@])
{{- end }}

manpath=(/usr/local/texlive/2022/texmf-dist/doc/man $manpath[@])
infopath=(/usr/local/texlive/2022/texmf-dist/doc/info $infopath[@])

export CLICOLOR=1
export DELTA_PAGER='less -S'
export EDITOR="nvim"
export FORGIT_LOG_FZF_OPTS="--reverse"
export FORGIT_REBASE_FZF_OPTS="--reverse"
export GPG_TTY=$(tty)
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LESS='-XRMsIg'
export NAVI_CONFIG="${HOME}/.config/navi/config.yaml"
export PAGER="less"
export RIPGREP_CONFIG_PATH="${HOME}/.ripgreprc"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
export TERM="xterm-256color"
export VISUAL="nvim"
export XDG_CONFIG_HOME="$HOME/.config"
export BATDIFF_USE_DELTA=true

eval "$(~/.local/bin/mise activate zsh)"

alias assume="source assume"
alias ls="exa"
alias lz="lazygit"
alias open='open_command'
alias vi="nvim"
alias vim="nvim"
alias vimdiff="nvim -d"
alias man="batman"

gpgconf --launch gpg-agent

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"

zinit add-fpath $HOME/.local/share/zsh/site-functions

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Has to come before zsh-completions
zinit light Aloxaf/fzf-tab

# See https://github.com/zdharma-continuum/fast-syntax-highlighting#zinit
zinit wait lucid for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
 blockf \
    zsh-users/zsh-completions \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

zinit pack for dircolors-material

zinit atclone'starship init zsh > zhook.zsh' \
    atpull'%atclone' src"zhook.zsh" nocompile'!' for \
        starship/starship

zinit as"null" wait"2" lucid \
    atpull'%atclone' src"zhook.zsh" nocompile'!' for \
        atclone'zoxide init --cmd cd zsh > zhook.zsh' ajeetdsouza/zoxide \
        atclone'atuin init zsh > zhook.zsh' ellie/atuin \
        atclone'navi widget zsh > zhook.zsh' denisidoro/navi \
        atclone'direnv hook zsh > zhook.zsh' direnv/direnv

zinit as"null" wait"2" lucid \
    atinit'fpath+=( $PWD )' \
    atload"zicompinit; zicdreplay" \
    atpull'%atclone' nocompile'!' for \
        atclone'kind completion zsh > _kind' kubernetes-sigs/kind \
        atclone'helm completion zsh > _helm' helm/helm \
        atclone'kubectl completion zsh > _kubectl' kubernetes/kubectl \
        atclone'kustomize completion zsh > _kustomize' kubernetes-sigs/kustomize \
        atclone'chezmoi completion zsh > _chezmoi' twpayne/chezmoi \
        atclone'mise exec -- zellij setup --generate-completion zsh > _zellij' zellij-org/zellij \
        atclone'mise completion zsh > _mise' jdx/mise

zinit as"null" wait"1" lucid \
    atpull'%atclone' nocompile'!' for \
        atclone'./install' junegunn/fzf

zinit silent wait"1" is-snippet for \
    .zsh/ghq.zsh \
    .zsh/git.zsh \
    .zsh/fzf.zsh \
    .fzf.zsh

zinit ice depth=1
zinit light jeffreytse/zsh-vi-mode

zinit wait lucid for \
    OMZ::lib/functions.zsh \
    OMZP::git \
    OMZP::colored-man-pages

zinit ice wait"2" lucid
zinit load wfxr/forgit
