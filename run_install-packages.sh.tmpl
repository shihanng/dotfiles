#!/bin/bash
set -eux

if ! [ -x "$(command -v git)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install git
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sudo apt install git 
  {{- end }}
fi

if ! [ -x "$(command -v go)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  sudo rm -rf /usr/local/go && curl -LSs https://golang.org/dl/go1.17.2.darwin-amd64.tar.gz | sudo tar -C /usr/local -xzf-
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sudo rm -rf /usr/local/go && curl -LSs https://golang.org/dl/go1.17.2.linux-amd64.tar.gz | sudo tar -C /usr/local -xzf-
  {{- end }}
fi

if ! [ -x "$(command -v starship)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install starship
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sh -c "$(curl -fsSL https://starship.rs/install.sh)"
  {{- end }}
fi

if ! [ -x "$(command -v asdf)" ]; then
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
  mkdir -p ~/.config/fish/completions && ln -s ~/.asdf/completions/asdf.fish ~/.config/fish/completions
fi

if ! [ -x "$(command -v direnv)" ]; then
  asdf plugin add direnv || true
  asdf install direnv 2.28.0
fi

if ! [ -x "$(command -v nvim)" ]; then
  asdf plugin add neovim || true
  asdf install neovim 0.6.0
fi

if ! [ -x "$(command -v lua)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  xcode-select --install
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sudo apt-get install \
    linux-headers-$(uname -r) \
    build-essential \
    libreadline-dev 
  {{- end }}
  asdf plugin add lua || true
  asdf install lua 5.3.5
fi

if ! [ -x "$(command -v ghq)" ]; then
  asdf plugin add ghq || true
  asdf install ghq 1.2.1
fi

if ! [ -x "$(command -v lua-language-server)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install ninja
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sudo apt install ninja-build
  {{- end }}
  ghq get sumneko/lua-language-server
  cd "$(ghq root)/github.com/sumneko/lua-language-server"
  git submodule update --init --recursive
  cd 3rd/luamake
  ./compile/install.sh
  cd ../..
  ./3rd/luamake/luamake rebuild
fi

if [ "$(node --version)" != "v16.13.0" ]; then
  asdf plugin add nodejs || true
  asdf install nodejs lts
fi

if ! [ -x "$(command -v keybase)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  echo "Visit https://keybase.io/docs/the_app/install_macos to install Keybase"
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  curl --remote-name https://prerelease.keybase.io/keybase_amd64.deb
  sudo apt install ./keybase_amd64.deb
  run_keybase
  {{- end }}
fi

if ! [ -x "$(command -v fzf)" ]; then
  git clone --depth 1 https://github.com/junegunn/fzf.git ${HOME}/.fzf
  ${HOME}/.fzf/install
fi

if ! [ -x "$(command -v efm-langserver)" ]; then
  go install github.com/mattn/efm-langserver@latest
fi

if ! [ -x "$(command -v rg)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install ripgrep
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sudo apt-get install ripgrep
  {{- end }}
fi

if ! [ -x "$(command -v tflint)" ]; then
  asdf plugin add tflint || true
  asdf install tflint 0.32.0
fi

if ! [ -x "$(command -v tmux)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install tmux
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sudo apt-get install tmux
  {{- end }}
fi

if [ ! -d "${HOME}/.tmux/plugins/tpm" ]; then
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

if ! [ -x "$(command -v yarn)" ]; then
  npm install -g yarn
fi

if ! [ -x "$(command -v prettierd)" ]; then
  npm install -g @fsouza/prettierd
fi

if ! [ -x "$(command -v prettier-eslint)" ]; then
  npm install -g prettier-eslint-cli
fi

if ! [ -x "$(command -v gh)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install gh
  {{- else }}
  echo "python in ubuntu not supported"
  {{- end }}
fi

if ! [ -x "$(command -v jq)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install jq
  {{- else if or (eq .chezmoi.osRelease.name "Ubuntu") (eq .chezmoi.osRelease.name "elementary OS") }}
  sudo apt-get install jq
  {{- end }}
fi

if ! [ -x "$(command -v gpgconf)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install gnupg
  {{- else }}
  echo "python in ubuntu not supported"
  {{- end }}
fi

if ! [ -x "$(command -v pet)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install knqyf263/pet/pet
  {{- else }}
  echo "python in ubuntu not supported"
  {{- end }}
fi

if ! [ -x "$(command -v aws)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  asdf plugin add awscli || true
  asdf install awscli 2.1.29
  {{- else }}
  echo "python in ubuntu not supported"
  {{- end }}
fi

if ! [ -x "$(command -v fd)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install fd
  {{- else }}
  echo "python in ubuntu not supported"
  {{- end }}
fi

if ! [ -x "$(command -v delta)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install git-delta
  {{- else }}
  echo "python in ubuntu not supported"
  {{- end }}
fi

if [ "$(python --version)" != "Python 3.9.7" ]; then
  asdf plugin add python || true
  asdf install python 3.9.7
fi

if ! [ -x "$(command -v gopls)" ]; then
  go install golang.org/x/tools/gopls@latest
fi

if ! [ -x "$(command -v golangci-lint)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install golangci-lint
  {{- else }}
  echo "non-darwin not supported"
  {{- end }}
fi

if [[ "$(ruby --version)" != *"3.0.2"* ]]; then
  asdf plugin add ruby || true
  asdf install ruby 3.0.2
fi

if ! [ -x "$(command -v terraform)" ]; then
  asdf plugin add terraform || true
  asdf install terraform 1.0.10
fi

if ! [ -x "$(command -v terraform-ls)" ]; then
  asdf plugin add terraform-ls || true
  asdf install terraform-ls 0.23.0
fi

if ! [ -x "$(command -v pgcli)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install pgcli
  {{- else }}
  echo "non-darwin not supported"
  {{- end }}
fi

CHEZMOI_COMPLETIONS="${HOME}/.config/fish/completions/chezmoi.fish"
if [ ! -f "${CHEZMOI_COMPLETIONS}" ]; then
  chezmoi completion fish --output="${CHEZMOI_COMPLETIONS}"
fi

if ! [ -x "$(command -v tmuxinator)" ]; then
  {{- if eq .chezmoi.os "darwin" }}
  brew install tmuxinator
  {{- else }}
  echo "tmuxinator in non-darwin not supported"
  {{- end }}
fi
