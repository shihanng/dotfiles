# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet python "create python shell" b
let
  pkgs = import <nixpkgs> {};
  python3Env = pkgs.python${1}.withPackages (ps: with ps; [
  ]);
in
pkgs.mkShell {
  buildInputs = [
    python3Env
  ];
}
endsnippet

# https://www.breakds.org/post/nix-shell-for-nodejs/
snippet node "create node shell" b
let
  pkgs = import <nixpkgs> {};

  frameworks = pkgs.darwin.apple_sdk.frameworks;

  buildNodejs = pkgs.callPackage <nixpkgs/pkgs/development/web/nodejs/nodejs.nix> {};

  nodejs-12 = buildNodejs {
    enableNpm = true;
    version = "12.13.0";
    sha256 = "1xmy73q3qjmy68glqxmfrk6baqk655py0cic22h1h0v7rx0iaax8";
  };

  nodejs-10 = buildNodejs {
    enableNpm = true;
    version = "10.19.0";
    sha256 = "0sginvcsf7lrlzsnpahj4bj1f673wfvby8kaxgvzlrbb7sy229v2";
  };

  nodejs-8 = buildNodejs {
    enableNpm = true;
    version = "8.17.0";
    sha256 = "1zzn7s9wpz1cr4vzrr8n6l1mvg6gdvcfm6f24h1ky9rb93drc3av";
  };

  nodejs-current = nodejs-${1};
in
pkgs.mkShell {
  buildInputs = [
    nodejs-current
    frameworks.CoreFoundation
    frameworks.CoreServices
  ];

  NIX_LDFLAGS = "-F${frameworks.CoreFoundation}/Library/Frameworks -framework CoreFoundation";
}
endsnippet
